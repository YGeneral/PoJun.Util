<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PoJun.Util</name>
    </assembly>
    <members>
        <member name="T:PoJun.Util.Datas.Operator">
            <summary>
            查询操作符
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.Greater">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.GreaterEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.Less">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.LessEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.Starts">
            <summary>
            头匹配
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.Ends">
            <summary>
            尾匹配
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.Contains">
            <summary>
            模糊匹配
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.In">
            <summary>
            In
            </summary>
        </member>
        <member name="F:PoJun.Util.Datas.Operator.NotIn">
            <summary>
            Not In
            </summary>
        </member>
        <member name="T:PoJun.Util.Expressions.ParameterRebinder">
            <summary>
            参数重绑定操作
            </summary>
        </member>
        <member name="F:PoJun.Util.Expressions.ParameterRebinder._map">
            <summary>
            参数字典
            </summary>
        </member>
        <member name="M:PoJun.Util.Expressions.ParameterRebinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>
            初始化参数重绑定操作
            </summary>
            <param name="map">参数字典</param>
        </member>
        <member name="M:PoJun.Util.Expressions.ParameterRebinder.ReplaceParameters(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression)">
            <summary>
            替换参数
            </summary>
            <param name="map">参数字典</param>
            <param name="exp">表达式</param>
        </member>
        <member name="M:PoJun.Util.Expressions.ParameterRebinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            访问参数
            </summary>
            <param name="parameterExpression">参数</param>
        </member>
        <member name="T:PoJun.Util.Extensions">
            <summary>
            系统扩展 - 公共
            </summary>
            <summary>
            系统扩展 - 类型转换
            </summary>
            <summary>
            系统扩展 - 日期
            </summary>
            <summary>
            系统扩展 - 格式化
            </summary>
            <summary>
            系统扩展 - Lambda表达式
            </summary>
            <summary>
            系统扩展 - 反射
            </summary>
            <summary>
            系统扩展 - 字符串
            </summary>
            <summary>
            系统扩展 - 验证
            </summary>
        </member>
        <member name="M:PoJun.Util.Extensions.SafeValue``1(System.Nullable{``0})">
            <summary>
            安全获取值，当值为null时，不会抛出异常
            </summary>
            <param name="value">可空值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Value(System.Enum)">
            <summary>
            获取枚举值
            </summary>
            <param name="instance">枚举实例</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Value``1(System.Enum)">
            <summary>
            获取枚举值
            </summary>
            <typeparam name="TResult">返回值类型</typeparam>
            <param name="instance">枚举实例</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Description(System.Enum)">
            <summary>
            获取枚举描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <param name="instance">枚举实例</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            转换为用分隔符连接的字符串
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="list">集合</param>
            <param name="quotes">引号，默认不带引号，范例：单引号 "'"</param>
            <param name="separator">分隔符，默认使用逗号分隔</param>
        </member>
        <member name="M:PoJun.Util.Extensions.SafeString(System.Object)">
            <summary>
            安全转换为字符串，去除两端空格，当值为null时返回""
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToBool(System.String)">
            <summary>
            转换为bool
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToBoolOrNull(System.String)">
            <summary>
            转换为可空bool
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToInt(System.String)">
            <summary>
            转换为int
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToIntOrNull(System.String)">
            <summary>
            转换为可空int
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToLong(System.String)">
            <summary>
            转换为long
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToLongOrNull(System.String)">
            <summary>
            转换为可空long
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDouble(System.String)">
            <summary>
            转换为double
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDoubleOrNull(System.String)">
            <summary>
            转换为可空double
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDecimal(System.String)">
            <summary>
            转换为decimal
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDecimalOrNull(System.String)">
            <summary>
            转换为可空decimal
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDate(System.String)">
            <summary>
            转换为日期
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDateOrNull(System.String)">
            <summary>
            转换为可空日期
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToGuid(System.String)">
            <summary>
            转换为Guid
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToGuidOrNull(System.String)">
            <summary>
            转换为可空Guid
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToGuidList(System.String)">
            <summary>
            转换为Guid集合
            </summary>
            <param name="obj">数据,范例: "83B0233C-A24F-49FD-8083-1337209EBC9A,EAB523C6-2FE7-47BE-89D5-C6D440C3033A"</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToGuidList(System.Collections.Generic.IList{System.String})">
            <summary>
            转换为Guid集合
            </summary>
            <param name="obj">字符串集合</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDateTimeString(System.DateTime,System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy-MM-dd HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
            <param name="removeSecond">是否移除秒</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDateTimeString(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy-MM-dd HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
            <param name="removeSecond">是否移除秒</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDateString(System.DateTime)">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy-MM-dd"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToDateString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy-MM-dd"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToTimeString(System.DateTime)">
            <summary>
            获取格式化字符串，不带年月日，格式："HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToTimeString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，不带年月日，格式："HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToMillisecondString(System.DateTime)">
            <summary>
            获取格式化字符串，带毫秒，格式："yyyy-MM-dd HH:mm:ss.fff"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToMillisecondString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，带毫秒，格式："yyyy-MM-dd HH:mm:ss.fff"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToChineseDateString(System.DateTime)">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy年MM月dd日"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToChineseDateString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy年MM月dd日"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToChineseDateTimeString(System.DateTime,System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy年MM月dd日 HH时mm分"
            </summary>
            <param name="dateTime">日期</param>
            <param name="removeSecond">是否移除秒</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToChineseDateTimeString(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy年MM月dd日 HH时mm分"
            </summary>
            <param name="dateTime">日期</param>
            <param name="removeSecond">是否移除秒</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Description(System.TimeSpan)">
            <summary>
            获取描述
            </summary>
            <param name="span">时间间隔</param>
        </member>
        <member name="M:PoJun.Util.Extensions.FirstDayOfMonth(System.DateTime)">
            <summary>
            得到指定日期的当月第一天
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.LastDayOfMonth(System.DateTime)">
            <summary>
            得到指定日期当月的最后一天
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PoJun.Util.Extensions.DateTimeToTimeStamp(System.DateTime)" -->
        <member name="M:PoJun.Util.Extensions.GetMillisecond(System.DateTime)">
            <summary>
            获取当前时间的毫秒数
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.GetDaysNumber(System.DateTime)">
            <summary>
            获取当前时间的天数
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.Description(System.Boolean)">
            <summary>
            获取描述
            </summary>
            <param name="value">布尔值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Description(System.Nullable{System.Boolean})">
            <summary>
            获取描述
            </summary>
            <param name="value">布尔值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Property(System.Linq.Expressions.Expression,System.String)">
            <summary>
            创建属性表达式
            </summary>
            <param name="expression">表达式</param>
            <param name="propertyName">属性名,支持多级属性名，与句点分隔，范例：Customer.Name</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Property(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
            <summary>
            创建属性表达式
            </summary>
            <param name="expression">表达式</param>
            <param name="member">属性</param>
        </member>
        <member name="M:PoJun.Util.Extensions.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            与操作表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            与操作表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            或操作表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            或操作表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Value``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取lambda表达式的值
            </summary>
            <typeparam name="T">对象类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Extensions.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Equal(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建不等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.NotEqual(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建不等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Greater(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建大于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Greater(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建大于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.GreaterEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建大于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.GreaterEqual(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建大于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Less(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建小于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Less(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建小于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.LessEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建小于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:PoJun.Util.Extensions.LessEqual(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建小于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.StartsWith(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            头匹配
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.EndsWith(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            尾匹配
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Contains(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            模糊匹配
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Operation(System.Linq.Expressions.Expression,PoJun.Util.Datas.Operator,System.Object)">
            <summary>
            操作
            </summary>
            <param name="left">左操作数</param>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Operation(System.Linq.Expressions.Expression,PoJun.Util.Datas.Operator,System.Linq.Expressions.Expression)">
            <summary>
            操作
            </summary>
            <param name="left">左操作数</param>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Call(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])">
            <summary>
            创建调用方法表达式
            </summary>
            <param name="instance">调用的实例</param>
            <param name="methodName">方法名</param>
            <param name="values">参数值列表</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Call(System.Linq.Expressions.Expression,System.String,System.Object[])">
            <summary>
            创建调用方法表达式
            </summary>
            <param name="instance">调用的实例</param>
            <param name="methodName">方法名</param>
            <param name="values">参数值列表</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Object[])">
            <summary>
            创建调用方法表达式
            </summary>
            <param name="instance">调用的实例</param>
            <param name="methodName">方法名</param>
            <param name="paramTypes">参数类型列表</param>
            <param name="values">参数值列表</param>
        </member>
        <member name="M:PoJun.Util.Extensions.Compose``1(System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
            组合表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="first">左操作数</param>
            <param name="second">右操作数</param>
            <param name="merge">合并操作</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToLambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
            <summary>
            创建Lambda表达式
            </summary>
            <typeparam name="TDelegate">委托类型</typeparam>
            <param name="body">表达式</param>
            <param name="parameters">参数列表</param>
        </member>
        <member name="M:PoJun.Util.Extensions.ToPredicate``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
            <summary>
            创建谓词表达式
            </summary>
            <typeparam name="T">委托类型</typeparam>
            <param name="body">表达式</param>
            <param name="parameters">参数列表</param>
        </member>
        <member name="M:PoJun.Util.Extensions.GetPropertyValue(System.Reflection.MemberInfo,System.Object)">
            <summary>
            获取实例上的属性值
            </summary>
            <param name="member">成员信息</param>
            <param name="instance">成员所在的类实例</param>
        </member>
        <member name="M:PoJun.Util.Extensions.RemoveEnd(System.String,System.String)">
            <summary>
            移除末尾字符串
            </summary>
            <param name="value">值</param>
            <param name="removeValue">要移除的值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.CheckNull(System.Object,System.String)">
            <summary>
            检测对象是否为null,为null则抛出<see cref="T:System.ArgumentNullException"/>异常
            </summary>
            <param name="obj">对象</param>
            <param name="parameterName">参数名</param>
        </member>
        <member name="M:PoJun.Util.Extensions.IsEmpty(System.String)">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.IsEmpty(System.Guid)">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.IsEmpty(System.Nullable{System.Guid})">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Extensions.IsJson(System.String)">
            <summary>
            判断字符串是否为json 
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsNumber(System.String)">
            <summary>
            是否数字
            </summary>
            <param name="input">输入值</param>        
        </member>
        <member name="M:PoJun.Util.Extensions.IsEmail(System.String)">
            <summary>
            验证邮箱
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsUrl(System.String)">
            <summary>
            验证网址
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsDateTime(System.String)">
            <summary>
            验证日期
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsIP(System.String)">
            <summary>
            验证IP
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsIDCard(System.String)">
            <summary>
            验证身份证是否有效
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsIDCard18(System.String)">
            <summary>
            验证18位身份证
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsIDCard15(System.String)">
            <summary>
            验证15位身份证
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsDecimal(System.String)">
            <summary>
            验证是否位小数
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsChinese(System.String)">
            <summary>
            验证是否为中文
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsContainChinese(System.String)">
            <summary>
            验证是否包含中文
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Extensions.IsAllInChinese(System.String)">
            <summary>
            验证是否全部为中文
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:PoJun.Util.Helpers.Common">
            <summary>
            常用公共操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Common.GetType``1">
            <summary>
            获取类型
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Helpers.Common.GetType(System.Type)">
            <summary>
            获取类型
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="P:PoJun.Util.Helpers.Common.Line">
            <summary>
            换行符
            </summary>
        </member>
        <member name="T:PoJun.Util.Helpers.Const">
            <summary>
            常量
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Const.ChinesePinYin">
            <summary>
            汉字及拼音首字母
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Const.SimplifiedChinese">
            <summary>
            常用简体汉字
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Const.Letters">
            <summary>
            英文字母
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Const.Numbers">
            <summary>
            数字
            </summary>
        </member>
        <member name="T:PoJun.Util.Helpers.Convert">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToInt(System.Object)">
            <summary>
            转换为32位整型
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToIntOrNull(System.Object)">
            <summary>
            转换为32位可空整型
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToLong(System.Object)">
            <summary>
            转换为64位整型
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToLongOrNull(System.Object)">
            <summary>
            转换为64位可空整型
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToFloat(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为32位浮点型,并按指定小数位舍入
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToFloatOrNull(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为32位可空浮点型,并按指定小数位舍入
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToDouble(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为64位浮点型,并按指定小数位舍入，温馨提示：4舍6入5成双
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToDoubleOrNull(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为64位可空浮点型,并按指定小数位舍入，温馨提示：4舍6入5成双
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToDecimal(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为128位浮点型,并按指定小数位舍入，温馨提示：4舍6入5成双
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToDecimalOrNull(System.Object,System.Nullable{System.Int32})">
            <summary>
            转换为128位可空浮点型,并按指定小数位舍入，温馨提示：4舍6入5成双
            </summary>
            <param name="input">输入值</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToBool(System.Object)">
            <summary>
            转换为布尔值
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToBoolOrNull(System.Object)">
            <summary>
            转换为可空布尔值
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.GetBool(System.Object)">
            <summary>
            获取布尔值
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToDate(System.Object)">
            <summary>
            转换为日期
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToDateOrNull(System.Object)">
            <summary>
            转换为可空日期
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToGuid(System.Object)">
            <summary>
            转换为Guid
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToGuidOrNull(System.Object)">
            <summary>
            转换为可空Guid
            </summary>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToGuidList(System.String)">
            <summary>
            转换为Guid集合
            </summary>
            <param name="input">以逗号分隔的Guid集合字符串，范例:83B0233C-A24F-49FD-8083-1337209EBC9A,EAB523C6-2FE7-47BE-89D5-C6D440C3033A</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToList``1(System.String)">
            <summary>
            泛型集合转换
            </summary>
            <typeparam name="T">目标元素类型</typeparam>
            <param name="input">以逗号分隔的元素集合字符串，范例:83B0233C-A24F-49FD-8083-1337209EBC9A,EAB523C6-2FE7-47BE-89D5-C6D440C3033A</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.To``1(System.Object)">
            <summary>
            通用泛型转换
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="input">输入值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToBytes(System.String)">
            <summary>
            转换为字节数组
            </summary>
            <param name="input">输入值</param>        
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.ToBytes(System.String,System.Text.Encoding)">
            <summary>
            转换为字节数组
            </summary>
            <param name="input">输入值</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Convert.EnumToDic``1(System.String,System.String,System.Boolean)">
            <summary>  
            枚举转字典集合  
            </summary>  
            <typeparam name="T">枚举类名称</typeparam>  
            <param name="keyDefault">默认key值</param>  
            <param name="valueDefault">默认value值</param>  
            <param name="descIsEqualToKey">让枚举字段描述当作字典的Key</param>  
            <returns>返回生成的字典集合</returns>  
        </member>
        <member name="T:PoJun.Util.Helpers.DataConvert`1">
            <summary>
            数据转换
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.DataConvert`1.ConvertToModel(System.Data.DataTable)">
            <summary>
            DataTable转List
            </summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.DataConvert`1.ListToTable(System.Collections.Generic.List{`0},System.Boolean)">
            <summary>  
            List集合转DataTable
            </summary>
            <param name="list">传入集合</param>  
            <param name="isStoreDB">是否存入数据库DateTime字段，date时间范围没事，取出展示不用设置TRUE</param>  
            <returns>返回datatable结果</returns>  
        </member>
        <member name="M:PoJun.Util.Helpers.DataConvert`1.ClassToDictionary(`0)">
            <summary>
            Class To Dictionary
            不能转换类里面有字段类型为Class的类型的类
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:PoJun.Util.Helpers.DataConverterHelper`1">
            <summary>
            DataTable与List转换工具类
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.DataConverterHelper`1.ConvertToModel(System.Data.DataTable)">
            <summary>
            DataTable转List
            </summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.DataConverterHelper`1.ListToTable(System.Collections.Generic.List{`0},System.Boolean)">
            <summary>  
            List集合转DataTable
            </summary>
            <param name="list">传入集合</param>  
            <param name="isStoreDB">是否存入数据库DateTime字段，date时间范围没事，取出展示不用设置TRUE</param>  
            <returns>返回datatable结果</returns>  
        </member>
        <member name="T:PoJun.Util.Helpers.Encrypt">
            <summary>
            加密操作
            说明：
            1. AES加密整理自支付宝SDK
            2. RSA加密采用 https://github.com/stulzq/DotnetCore.RSA/blob/master/DotnetCore.RSA/RSAHelper.cs
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Md5By16(System.String)">
            <summary>
            Md5加密，返回16位结果
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Md5By16(System.String,System.Text.Encoding)">
            <summary>
            Md5加密，返回16位结果
            </summary>
            <param name="value">值</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Md5By16(System.Byte[])">
            <summary>
            Md5加密，返回16位结果
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Md5By32(System.String)">
            <summary>
            Md5加密，返回32位结果
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Md5By32(System.String,System.Text.Encoding)">
            <summary>
            Md5加密，返回32位结果
            </summary>
            <param name="value">值</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Md5By32(System.Byte[])">
            <summary>
            Md5加密，返回32位结果
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Md5(System.String,System.Text.Encoding,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Md5加密
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Md5(System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Md5加密
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Encrypt.DesKey">
            <summary>
            DES密钥,24位字符串
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.DesEncrypt(System.Object)">
            <summary>
            DES加密
            </summary>
            <param name="value">待加密的值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.DesEncrypt(System.Object,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥,24位</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.DesEncrypt(System.Object,System.String,System.Text.Encoding)">
            <summary>
            DES加密
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥,24位</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.ValidateDes(System.String,System.String)">
            <summary>
            验证Des加密参数
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.CreateDesProvider(System.String)">
            <summary>
            创建Des加密服务提供程序
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.GetEncryptResult(System.String,System.Text.Encoding,System.Security.Cryptography.ICryptoTransform)">
            <summary>
            获取加密结果
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.DesDecrypt(System.Object)">
            <summary>
            DES解密
            </summary>
            <param name="value">加密后的值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.DesDecrypt(System.Object,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="value">加密后的值</param>
            <param name="key">密钥,24位</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.DesDecrypt(System.Object,System.String,System.Text.Encoding)">
            <summary>
            DES解密
            </summary>
            <param name="value">加密后的值</param>
            <param name="key">密钥,24位</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.GetDecryptResult(System.String,System.Text.Encoding,System.Security.Cryptography.ICryptoTransform)">
            <summary>
            获取解密结果
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Encrypt._iv">
            <summary>
            128位0向量
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.Encrypt.Iv">
            <summary>
            128位0向量
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Encrypt.AesKey">
            <summary>
            AES密钥
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.AesEncrypt(System.String)">
            <summary>
            AES加密
            </summary>
            <param name="value">待加密的值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.AesEncrypt(System.String,System.String)">
            <summary>
            AES加密
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.AesEncrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            AES加密
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.CreateRijndaelManaged(System.String)">
            <summary>
            创建RijndaelManaged
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.AesDecrypt(System.String)">
            <summary>
            AES解密
            </summary>
            <param name="value">加密后的值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.AesDecrypt(System.String,System.String)">
            <summary>
            AES解密
            </summary>
            <param name="value">加密后的值</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.AesDecrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            AES解密
            </summary>
            <param name="value">加密后的值</param>
            <param name="key">密钥</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.RsaSign(System.String,System.String)">
            <summary>
            RSA加密，采用 SHA1 算法
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.RsaSign(System.String,System.String,System.Text.Encoding)">
            <summary>
            RSA加密，采用 SHA1 算法
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Rsa2Sign(System.String,System.String)">
            <summary>
            RSA加密，采用 SHA256 算法
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.Rsa2Sign(System.String,System.String,System.Text.Encoding)">
            <summary>
            RSA加密，采用 SHA256 算法
            </summary>
            <param name="value">待加密的值</param>
            <param name="key">密钥</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.RsaSign(System.String,System.String,System.Text.Encoding,PoJun.Util.Helpers.Internal.RSAType)">
            <summary>
            Rsa加密
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.DesEncode_CBC(System.String,System.String)">
            <summary>
            CBC模式的Des加密
            </summary>
            <param name="str">加密字符</param>
            <param name="key">密钥</param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.DesDecode_CBC(System.String,System.String)">
            <summary>
            CBC模式的Des解密
            </summary>
            <param name="str"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.HmacSha256(System.String,System.String)">
            <summary>
            HMACSHA256加密
            </summary>
            <param name="value">值</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Encrypt.HmacSha256(System.String,System.String,System.Text.Encoding)">
            <summary>
            HMACSHA256加密
            </summary>
            <param name="value">值</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="T:PoJun.Util.Helpers.Enum">
            <summary>
            枚举操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.Parse``1(System.Object)">
            <summary>
            获取实例
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="member">成员名或值,范例:Enum1枚举有成员A=0,则传入"A"或"0"获取 Enum1.A</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetName``1(System.Object)">
            <summary>
            获取成员名
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="member">成员名、值、实例均可,范例:Enum1枚举有成员A=0,则传入Enum1.A或0,获取成员名"A"</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetName(System.Type,System.Object)">
            <summary>
            获取成员名
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetValue``1(System.Object)">
            <summary>
            获取成员值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="member">成员名、值、实例均可，范例:Enum1枚举有成员A=0,可传入"A"、0、Enum1.A，获取值0</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetValue(System.Type,System.Object)">
            <summary>
            获取成员值
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetDescription``1(System.Object)">
            <summary>
            获取描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetDescription(System.Type,System.Object)">
            <summary>
            获取描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetItems``1">
            <summary>
            获取项集合,文本设置为Description，值为Value
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetItems(System.Type)">
            <summary>
            获取项集合,文本设置为Description，值为Value
            </summary>
            <param name="type">枚举类型</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetNames``1">
            <summary>
            获取名称集合
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.GetNames(System.Type)">
            <summary>
            获取名称集合
            </summary>
            <param name="type">枚举类型</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.AddItem(System.Type,System.Collections.Generic.ICollection{PoJun.Util.Item},System.Reflection.FieldInfo)">
            <summary>
            添加描述项
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.ValidateEnum(System.Reflection.TypeInfo)">
            <summary>
            验证是否枚举类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Enum.AddItem``1(System.Collections.Generic.ICollection{PoJun.Util.Item},System.Reflection.FieldInfo)">
            <summary>
            添加描述项
            </summary>
        </member>
        <member name="T:PoJun.Util.Helpers.File">
            <summary>
            文件和流操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.File.ToBytesAsync(System.IO.Stream)">
            <summary>
            流转换为字节流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:PoJun.Util.Helpers.File.ToBytes(System.IO.Stream)">
            <summary>
            流转换为字节流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:PoJun.Util.Helpers.File.ToBytes(System.String)">
            <summary>
            字符串转换成字节数组
            </summary>
            <param name="data">数据,默认字符编码utf-8</param>        
        </member>
        <member name="M:PoJun.Util.Helpers.File.ToBytes(System.String,System.Text.Encoding)">
            <summary>
            字符串转换成字节数组
            </summary>
            <param name="data">数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.File.Read(System.String)">
            <summary>
            将文件读取到字节流中
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:PoJun.Util.Helpers.File.ToString(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
            <summary>
            流转换成字符串
            </summary>
            <param name="stream">流</param>
            <param name="encoding">字符编码</param>
            <param name="bufferSize">缓冲区大小</param>
            <param name="isCloseStream">读取完成是否释放流，默认为true</param>
        </member>
        <member name="M:PoJun.Util.Helpers.File.ToStringAsync(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
            <summary>
            流转换成字符串
            </summary>
            <param name="stream">流</param>
            <param name="encoding">字符编码</param>
            <param name="bufferSize">缓冲区大小</param>
            <param name="isCloseStream">读取完成是否释放流，默认为true</param>
        </member>
        <member name="M:PoJun.Util.Helpers.File.CopyToStringAsync(System.IO.Stream,System.Text.Encoding)">
            <summary>
            复制流并转换成字符串
            </summary>
            <param name="stream">流</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="T:PoJun.Util.Helpers.FileOperations">
            <summary>
            Class Name：【文件操作类--工具层】
            Powered By：General
            Create Date：2011-11-8
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.CreateAFolder(System.String)">
            <summary>
            创建文件夹【文件夹目录】
            </summary>
            <param name="FileName">文件夹地址</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.GetPostfixStr(System.String)">
            <summary>
            取的文件后缀名
            </summary>
            <param name="filename">文件名</param>
            <returns>文件后缀名</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.WriteFileAsync(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="path">文件路径</param>
            <param name="content">文件内容</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.WriteFileAsync(System.String,System.String,System.Text.Encoding)">
            <summary>
            写文件
            </summary>
            <param name="path">文件路径</param>
            <param name="data">文件内容</param>
            <param name="encoding">编码格式</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.WriteFileToByteAsync(System.String,System.Byte[])">
            <summary>
            写文件
            </summary>
            <param name="path">文件路径</param>
            <param name="data">文件内容</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.ReadFileAsync(System.String)">
            <summary>
            读文件
            </summary>
            <param name="path">文件路径</param>
            <returns>文件内容</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.ReadFileAsync(System.String,System.Text.Encoding)">
            <summary>
            读文件
            </summary>
            <param name="path">文件路径</param>
            <param name="encoding">编码格式</param>
            <returns>文件内容</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.ReadFileToByteAsync(System.String)">
            <summary>
            读文件
            </summary>
            <param name="path">文件路径</param>
            <returns>文件内容</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.FileAdd(System.String,System.String)">
            <summary>
            追加文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="strings">内容</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.FileCoppy(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="OrignFile">原始文件</param>
            <param name="NewFile">新文件路径</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="Path">路径</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="OrignFile">原始路径</param>
            <param name="NewFile">新路径</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.FolderCreate(System.String,System.String)">
            <summary>
            在当前目录下创建目录
            </summary>
            <param name="OrignFolder">当前目录</param>
            <param name="NewFloder">新目录</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir"></param>  
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.CopyDir(System.String,System.String)">
            <summary>
            指定文件夹下面的所有内容copy到目标文件夹下面
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.GetFoldAll(System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件
            </summary>
            <param name="Path">详细路径</param>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="Rn">用于迭加的传入值,一般为空</param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.GetDirectoryLength(System.String)">
            <summary>
            获取文件夹大小
            </summary>
            <param name="dirPath">文件夹路径</param>
            <returns>文件夹大小</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.GetFileAttibeToString(System.String)">
            <summary>
            获取指定文件详细属性
            </summary>
            <param name="filePath">文件详细路径</param>
            <returns>文件详细属性</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.FileOperations.GetFileAttibe(System.String)">
            <summary>
            获取指定文件详细属性
            </summary>
            <param name="filePath">文件详细路径</param>
            <returns>文件详细属性</returns>
        </member>
        <member name="T:PoJun.Util.Helpers.HtmlHelper">
            <summary>
            Html操作相关类
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.HtmlHelper.CookieContainer">
            <summary> 
            Cookie
            </summary> 
        </member>
        <member name="P:PoJun.Util.Helpers.HtmlHelper.Encoding">
            <summary> 
            语言
            </summary> 
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.GetHtml(System.String,System.String,System.Boolean,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="postData">post 提交的字符串</param>
            <param name="isPost">是否是post</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.GetHtml(System.String,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.GetStream(System.String,System.Net.CookieContainer)">
            <param name="url">地址</param>
            <param name="cookieContainer">cookieContainer</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.NoHTML(System.String)">
            <summary>   
            清除HTML标记   
            </summary>   
            <param name="NoHTML">包括HTML的源码</param>   
            <returns>已经去除后的文字</returns>   
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.DelHtmlCode(System.String)">
            <summary>
            删除文本中带的HTML标记
            </summary>
            <param name="InString">输入要删除带HTML的字符串</param>    
            <returns>返回处理过的字符串</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.GetHref(System.String)">
            <summary>
            获取页面的链接正则
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.GetImgSrc(System.String,System.String)">
            <summary>
            匹配页面的图片地址
            </summary>
            <param name="imgHttp">要补充的http://路径信息</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.GetImg(System.String,System.String)">
            <summary>
            匹配<img src="" />中的图片路径实际链接
            </summary>
            <param name="ImgString"><img src="" />字符串</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.Get_Http(System.String)">
            <summary>
            以GET方式抓取远程页面内容
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.Post_Http(System.String,System.String,System.String)">
            <summary>
            以POST方式抓取远程页面内容
            </summary>
            <param name="postData">参数列表</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.ZipHtml(System.String)">
            <summary>
            压缩HTML输出
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.DelHtml(System.String,System.String)">
            <summary>
            过滤指定HTML标签
            </summary>
            <param name="s_TextStr">要过滤的字符</param>
            <param name="html_Str">a img p div</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.File(System.String,System.Web.UI.Page)">
            <summary>
            加载文件块
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.CSS(System.String,System.Web.UI.Page)">
            <summary>
            加载CSS样式文件
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.JS(System.String,System.Web.UI.Page)">
            <summary>
            加载javascript脚本文件
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.alert(System.String,System.String)">
            <summary>
            弹出警告信息并跳转到指定页面地址
            </summary>
            <param name="str">警告信息内容</param>
            <param name="url">指定要跳转的页面地址</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.erro(System.String)">
            <summary>
            弹出信息 无跳转动作
            </summary>
            <param name="str">信息内容</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.goback">
            <summary>
            后退一页
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.DoJsFunction(System.String)">
            <summary>
            执行js命令
            </summary>
            <param name="function">传入要执行的js函数[包含参数的函数]</param>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.Decode(System.String)">
            <summary>
            解码得到url值
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.HtmlHelper.Encode(System.String)">
            <summary>
            编码传入url
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="T:PoJun.Util.Helpers.Id">
            <summary>
            Id生成器
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Id.GetObjectId">
            <summary>
            创建Id
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Id.GetGuidBy6">
            <summary>
            取得6位的GUID
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Id.GetGuidBy16">
            <summary>
            取得16位的GUID
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Id.GetGuidBy22">
            <summary>
            取得22位的GUID
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Id.GetGuidBy32">
            <summary>
            取得32位的GUID
            </summary>
            <returns></returns>
        </member>
        <member name="T:PoJun.Util.Helpers.Internal.ObjectId">
            <summary>
            Id生成器，代码出自：https://github.com/tangxuehua/ecommon/blob/master/src/ECommon/PoJun.Utilities/ObjectId.cs
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.#ctor(System.DateTime,System.Int32,System.Int16,System.Int32)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="timestamp">The timestamp (expressed as a DateTime).</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.#ctor(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:PoJun.Util.Helpers.Internal.ObjectId.Empty">
            <summary>
            Gets an instance of ObjectId where the value is empty.
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.Internal.ObjectId.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.Internal.ObjectId.Machine">
            <summary>
            Gets the machine.
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.Internal.ObjectId.Pid">
            <summary>
            Gets the PID.
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.Internal.ObjectId.Increment">
            <summary>
            Gets the increment.
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.Internal.ObjectId.CreationTime">
            <summary>
            Gets the creation time (derived from the timestamp).
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.op_LessThan(PoJun.Util.Helpers.Internal.ObjectId,PoJun.Util.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is less than the second ObjectId.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.op_LessThanOrEqual(PoJun.Util.Helpers.Internal.ObjectId,PoJun.Util.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is less than or equal to the second ObjectId.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.op_Equality(PoJun.Util.Helpers.Internal.ObjectId,PoJun.Util.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are equal.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.op_Inequality(PoJun.Util.Helpers.Internal.ObjectId,PoJun.Util.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are not equal.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.op_GreaterThanOrEqual(PoJun.Util.Helpers.Internal.ObjectId,PoJun.Util.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is greather than or equal to the second ObjectId.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.op_GreaterThan(PoJun.Util.Helpers.Internal.ObjectId,PoJun.Util.Helpers.Internal.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is greather than the second ObjectId.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.GenerateNewId">
            <summary>
            Generates a new ObjectId with a unique value.
            </summary>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.GenerateNewId(System.DateTime)">
            <summary>
            Generates a new ObjectId with a unique value (with the timestamp component based on a given DateTime).
            </summary>
            <param name="timestamp">The timestamp component (expressed as a DateTime).</param>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.GenerateNewId(System.Int32)">
            <summary>
            Generates a new ObjectId with a unique value (with the given timestamp).
            </summary>
            <param name="timestamp">The timestamp component.</param>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.GenerateNewStringId">
            <summary>
            Generates a new ObjectId string with a unique value.
            </summary>
            <returns>The string value of the new generated ObjectId.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.Pack(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Packs the components of an ObjectId into a byte array.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.Parse(System.String)">
            <summary>
            Parses a string and creates a new ObjectId.
            </summary>
            <param name="s">The string value.</param>
            <returns>A ObjectId.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.Unpack(System.Byte[],System.Int32@,System.Int32@,System.Int16@,System.Int32@)">
            <summary>
            Unpacks a byte array into the components of an ObjectId.
            </summary>
            <param name="bytes">A byte array.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.GetCurrentProcessId">
            <summary>
            Gets the current process id.  This method exists because of how CAS operates on the call stack, checking
            for permissions before executing the method.  Hence, if we inlined this call, the calling method would not execute
            before throwing an exception requiring the try/catch at an even higher level that we don't necessarily control.
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.CompareTo(PoJun.Util.Helpers.Internal.ObjectId)">
            <summary>
            Compares this ObjectId to another ObjectId.
            </summary>
            <param name="other">The other ObjectId.</param>
            <returns>A 32-bit signed integer that indicates whether this ObjectId is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.Equals(PoJun.Util.Helpers.Internal.ObjectId)">
            <summary>
            Compares this ObjectId to another ObjectId.
            </summary>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are equal.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.Equals(System.Object)">
            <summary>
            Compares this ObjectId to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is an ObjectId and equal to this one.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.ToByteArray">
            <summary>
            Converts the ObjectId to a byte array.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.ParseHexString(System.String)">
            <summary>
            Parses a hex string into its equivalent byte array.
            </summary>
            <param name="s">The hex string to parse.</param>
            <returns>The byte equivalent of the hex string.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.ToHexString(System.Byte[])">
            <summary>
            Converts a byte array to a hex string.
            </summary>
            <param name="bytes">The byte array.</param>
            <returns>A hex string.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.ToMillisecondsSinceEpoch(System.DateTime)">
            <summary>
            Converts a DateTime to number of milliseconds since Unix epoch.
            </summary>
            <param name="dateTime">A DateTime.</param>
            <returns>Number of seconds since Unix epoch.</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.ObjectId.ToUniversalTime(System.DateTime)">
            <summary>
            Converts a DateTime to UTC (with special handling for MinValue and MaxValue).
            </summary>
            <param name="dateTime">A DateTime.</param>
            <returns>The DateTime in UTC.</returns>
        </member>
        <member name="T:PoJun.Util.Helpers.Internal.RsaHelper">
            <summary>
            RSA加解密 使用OpenSSL的公钥加密/私钥解密
            
            公私钥请使用openssl生成  ssh-keygen -t rsa 命令生成的公钥私钥是不行的
            
            作者：李志强
            时间：2017年10月30日15:50:14
            QQ:501232752
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.RsaHelper.#ctor(PoJun.Util.Helpers.Internal.RSAType,System.Text.Encoding,System.String,System.String)">
            <summary>
            实例化RSAHelper
            </summary>
            <param name="rsaType">加密算法类型 RSA SHA1;RSA2 SHA256 密钥长度至少为2048</param>
            <param name="encoding">编码类型</param>
            <param name="privateKey">私钥</param>
            <param name="publicKey">公钥</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.RsaHelper.Sign(System.String)">
            <summary>
            使用私钥签名
            </summary>
            <param name="data">原始数据</param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Internal.RsaHelper.Verify(System.String,System.String)">
            <summary>
            使用公钥验证签名
            </summary>
            <param name="data">原始数据</param>
            <param name="sign">签名</param>
            <returns></returns>
        </member>
        <member name="T:PoJun.Util.Helpers.Internal.RSAType">
            <summary>
            RSA算法类型
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Internal.RSAType.RSA">
            <summary>
            SHA1
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Internal.RSAType.RSA2">
            <summary>
            RSA2 密钥长度至少为2048
            SHA256
            </summary>
        </member>
        <member name="T:PoJun.Util.Helpers.Json">
            <summary>
            Json操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Json.ToObject``1(System.String)">
            <summary>
            将Json字符串转换为对象
            </summary>
            <param name="json">Json字符串</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Json.ToJson(System.Object,System.Boolean)">
            <summary>
            将对象转换为Json字符串
            </summary>
            <param name="target">目标对象</param>
            <param name="isConvertToSingleQuotes">是否将双引号转成单引号</param>
        </member>
        <member name="T:PoJun.Util.Helpers.Lambda">
            <summary>
            Lambda表达式操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetType(System.Linq.Expressions.Expression)">
            <summary>
            获取类型
            </summary>
            <param name="expression">表达式,范例：t => t.Name</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetMember(System.Linq.Expressions.Expression)">
            <summary>
            获取成员
            </summary>
            <param name="expression">表达式,范例：t => t.Name</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetMemberExpression(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            获取成员表达式
            </summary>
            <param name="expression">表达式</param>
            <param name="right">取表达式右侧,(l,r) => l.id == r.id，设置为true,返回r.id表达式</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetMethodCallExpressionName(System.Linq.Expressions.Expression)">
            <summary>
            获取方法调用表达式的成员名称
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetName(System.Linq.Expressions.Expression)">
            <summary>
            获取成员名称，范例：t => t.A.Name,返回 A.Name
            </summary>
            <param name="expression">表达式,范例：t => t.Name</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetMemberName(System.Linq.Expressions.MemberExpression)">
            <summary>
            获取成员名称
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetNames``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            获取名称列表，范例：t => new object[] { t.A.B, t.C },返回A.B,C
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="expression">属性集合表达式,范例：t => new object[]{t.A,t.B}</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetLastName(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            获取最后一级成员名称，范例：t => t.A.Name,返回 Name
            </summary>
            <param name="expression">表达式,范例：t => t.Name</param>
            <param name="right">取表达式右侧,(l,r) => l.LId == r.RId，设置为true,返回RId</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.IsValueExpression(System.Linq.Expressions.Expression)">
            <summary>
            是否值表达式
            </summary>
            <param name="expression">表达式</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetLastNames``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            获取最后一级成员名称列表，范例：t => new object[] { t.A.B, t.C },返回B,C
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="expression">属性集合表达式,范例：t => new object[]{t.A,t.B}</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetValue(System.Linq.Expressions.Expression)">
            <summary>
            获取值,范例：t => t.Name == "A",返回 A
            </summary>
            <param name="expression">表达式,范例：t => t.Name == "A"</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.HasParameter(System.Linq.Expressions.Expression)">
            <summary>
            是否包含参数，用于检测是属性，而不是值
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetMethodCallExpressionValue(System.Linq.Expressions.Expression)">
            <summary>
            获取方法调用表达式的值
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetMemberValue(System.Linq.Expressions.MemberExpression)">
            <summary>
            获取属性表达式的值
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetConstantExpressionValue(System.Linq.Expressions.Expression)">
            <summary>
            获取常量表达式的值
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetOperator(System.Linq.Expressions.Expression)">
            <summary>
            获取查询操作符,范例：t => t.Name == "A",返回 Operator.Equal
            </summary>
            <param name="expression">表达式,范例：t => t.Name == "A"</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetMethodCallExpressionOperator(System.Linq.Expressions.Expression)">
            <summary>
            获取方法调用表达式的值
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetParameter(System.Linq.Expressions.Expression)">
            <summary>
            获取参数，范例：t.Name,返回 t
            </summary>
            <param name="expression">表达式，范例：t.Name</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetGroupPredicates(System.Linq.Expressions.Expression)">
            <summary>
            获取分组的谓词表达式，通过Or进行分组
            </summary>
            <param name="expression">谓词表达式</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.CreateGroup(System.Collections.Generic.List{System.Collections.Generic.List{System.Linq.Expressions.Expression}})">
            <summary>
            创建分组
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.AddPredicates(System.Linq.Expressions.Expression,System.Collections.Generic.List{System.Collections.Generic.List{System.Linq.Expressions.Expression}},System.Collections.Generic.List{System.Linq.Expressions.Expression})">
            <summary>
            添加通过Or分割的谓词表达式
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetConditionCount(System.Linq.Expressions.LambdaExpression)">
            <summary>
            获取查询条件个数
            </summary>
            <param name="expression">谓词表达式,范例1：t => t.Name == "A" ，结果1。
            范例2：t => t.Name == "A" &amp;&amp; t.Age =1 ，结果2。</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetAttribute``1(System.Linq.Expressions.Expression)">
            <summary>
            获取特性
            </summary>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="expression">属性表达式</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetAttribute``3(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            获取特性
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetAttribute``2(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            获取特性
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GetAttributes``3(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            获取特性列表
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.Constant(System.Object,System.Linq.Expressions.Expression)">
            <summary>
            获取常量表达式
            </summary>
            <param name="value">值</param>
            <param name="expression">表达式</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.CreateParameter``1">
            <summary>
            创建参数表达式
            </summary>
            <typeparam name="T">参数类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.Equal``1(System.String,System.Object)">
            <summary>
            创建等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.NotEqual``1(System.String,System.Object)">
            <summary>
            创建不等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.Greater``1(System.String,System.Object)">
            <summary>
            创建大于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.GreaterEqual``1(System.String,System.Object)">
            <summary>
            创建大于等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.Less``1(System.String,System.Object)">
            <summary>
            创建小于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.LessEqual``1(System.String,System.Object)">
            <summary>
            创建小于等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.Starts``1(System.String,System.Object)">
            <summary>
            调用StartsWith方法
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.Ends``1(System.String,System.Object)">
            <summary>
            调用EndsWith方法
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.Contains``1(System.String,System.Object)">
            <summary>
            调用Contains方法
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Lambda.ParsePredicate``1(System.String,System.Object,PoJun.Util.Datas.Operator)">
            <summary>
            解析为谓词表达式
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
            <param name="operator">运算符</param>
        </member>
        <member name="T:PoJun.Util.Helpers.Random">
            <summary>
            随机数操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Random.Sort``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            对集合随机排序
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="array">集合</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Random.RandomString(System.Int32,System.Int32)">
            <summary>
            取随机数
            </summary>
            <param name="type">1：纯数字【默认】；2：字母(大写)+数字；2：字母(大写+小写)+数字</param>
            <param name="length">随机数长度</param>
            <returns></returns>
        </member>
        <member name="T:PoJun.Util.Helpers.Reflection">
            <summary>
            反射操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetDescription``1">
            <summary>
            获取类型描述，使用DescriptionAttribute设置描述
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetDescription``1(System.String)">
            <summary>
            获取类型成员描述，使用DescriptionAttribute设置描述
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="memberName">成员名称</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetDescription(System.Type,System.String)">
            <summary>
            获取类型成员描述，使用DescriptionAttribute设置描述
            </summary>
            <param name="type">类型</param>
            <param name="memberName">成员名称</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetDescription(System.Reflection.MemberInfo)">
            <summary>
            获取类型成员描述，使用DescriptionAttribute设置描述
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetDisplayName``1">
            <summary>
            获取显示名称，使用DisplayNameAttribute设置显示名称
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetDisplayName(System.Reflection.MemberInfo)">
            <summary>
            获取显示名称，使用DisplayAttribute或DisplayNameAttribute设置显示名称
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetDisplayNameOrDescription``1">
            <summary>
            获取显示名称或描述,使用DisplayNameAttribute设置显示名称,使用DescriptionAttribute设置描述
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetDisplayNameOrDescription(System.Reflection.MemberInfo)">
            <summary>
            获取属性显示名称或描述,使用DisplayAttribute或DisplayNameAttribute设置显示名称,使用DescriptionAttribute设置描述
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.FindTypes``1(System.Reflection.Assembly[])">
            <summary>
            查找类型列表
            </summary>
            <typeparam name="TFind">查找类型</typeparam>
            <param name="assemblies">待查找的程序集列表</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.FindTypes(System.Type,System.Reflection.Assembly[])">
            <summary>
            查找类型列表
            </summary>
            <param name="findType">查找类型</param>
            <param name="assemblies">待查找的程序集列表</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetTypes(System.Type,System.Reflection.Assembly)">
            <summary>
            获取类型列表
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.AddType(System.Collections.Generic.List{System.Type},System.Type,System.Type)">
            <summary>
            添加类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.MatchGeneric(System.Type,System.Type)">
            <summary>
            泛型匹配
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetInstancesByInterface``1(System.Reflection.Assembly[])">
            <summary>
            获取实现了接口的所有实例
            </summary>
            <typeparam name="TInterface">接口类型</typeparam>
            <param name="assemblies">待查找的程序集列表</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.CreateInstance``1(System.Type,System.Object[])">
            <summary>
            动态创建实例
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="type">类型</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetAssembly(System.String)">
            <summary>
            获取程序集
            </summary>
            <param name="assemblyName">程序集名称</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsBool(System.Reflection.MemberInfo)">
            <summary>
            是否布尔类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsBool(System.Reflection.PropertyInfo)">
            <summary>
            是否布尔类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsEnum(System.Reflection.MemberInfo)">
            <summary>
            是否枚举类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsEnum(System.Reflection.PropertyInfo)">
            <summary>
            是否枚举类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsDate(System.Reflection.MemberInfo)">
            <summary>
            是否日期类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsDate(System.Reflection.PropertyInfo)">
            <summary>
            是否日期类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsInt(System.Reflection.MemberInfo)">
            <summary>
            是否整型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsInt(System.Reflection.PropertyInfo)">
            <summary>
            是否整型
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsNumber(System.Reflection.MemberInfo)">
            <summary>
            是否数值类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsNumber(System.Reflection.PropertyInfo)">
            <summary>
            是否数值类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsCollection(System.Type)">
            <summary>
            是否集合
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.IsGenericCollection(System.Type)">
            <summary>
            是否泛型集合
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetAssemblies(System.String)">
            <summary>
            从目录中获取所有程序集
            </summary>
            <param name="directoryPath">目录绝对路径</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetPublicProperties(System.Object)">
            <summary>
            获取公共属性列表
            </summary>
            <param name="instance">实例</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetTopBaseType``1">
            <summary>
            获取顶级基类
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetTopBaseType(System.Type)">
            <summary>
            获取顶级基类
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Reflection.GetElementType(System.Type)">
            <summary>
            获取元素类型，如果是集合，返回集合的元素类型
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="T:PoJun.Util.Helpers.Regex">
            <summary>
            正则操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Regex.GetValues(System.String,System.String,System.String[],System.Text.RegularExpressions.RegexOptions)">
            <summary>
            获取匹配值集合
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="resultPatterns">结果模式字符串数组,范例：new[]{"$1","$2"}</param>
            <param name="options">选项</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Regex.AddResults(System.Collections.Generic.Dictionary{System.String,System.String},System.Text.RegularExpressions.Match,System.String[])">
            <summary>
            添加匹配结果
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Regex.GetValue(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            获取匹配值
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="resultPattern">结果模式字符串,范例："$1"用来获取第一个()内的值</param>
            <param name="options">选项</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            分割成字符串数组
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">选项</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            替换
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="replacement">替换字符串</param>
            <param name="options">选项</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Regex.IsMatch(System.String,System.String)">
            <summary>
            验证输入与模式是否匹配
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>        
        </member>
        <member name="M:PoJun.Util.Helpers.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            验证输入与模式是否匹配
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">选项</param>
        </member>
        <member name="T:PoJun.Util.Helpers.String">
            <summary>
            字符串操作 - 字符串生成器
            </summary>
            <summary>
            字符串操作 - 工具
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.#ctor">
            <summary>
            初始化字符串操作
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.String.Builder">
            <summary>
            字符串生成器
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.Append``1(``0)">
            <summary>
            追加内容
            </summary>
            <typeparam name="T">值的类型</typeparam>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.Append(System.String,System.Object[])">
            <summary>
            追加内容
            </summary>
            <param name="value">值</param>
            <param name="args">参数</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.AppendLine">
            <summary>
            追加内容并换行
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.AppendLine``1(``0)">
            <summary>
            追加内容并换行
            </summary>
            <typeparam name="T">值的类型</typeparam>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.AppendLine(System.String,System.Object[])">
            <summary>
            追加内容并换行
            </summary>
            <param name="value">值</param>
            <param name="args">参数</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.Replace(System.String)">
            <summary>
            替换内容
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.RemoveEnd(System.String)">
            <summary>
            移除末尾字符串
            </summary>
            <param name="end">末尾字符串</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.Clear">
            <summary>
            清空字符串
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.String.Length">
            <summary>
            字符串长度
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.String.Empty">
            <summary>
            空字符串
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.ToString">
            <summary>
            转换为字符串
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.Join``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            将集合连接为带分隔符的字符串
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="list">集合</param>
            <param name="quotes">引号，默认不带引号，范例：单引号 "'"</param>
            <param name="separator">分隔符，默认使用逗号分隔</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.PinYin(System.String)">
            <summary>
            获取汉字的拼音简码，即首字母缩写,范例：中国,返回zg
            </summary>
            <param name="chineseText">汉字文本,范例： 中国</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.ResolvePinYin(System.Char)">
            <summary>
            解析单个汉字的拼音简码
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.ResolveByCode(System.UInt16)">
            <summary>
            使用字符编码方式获取拼音简码
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.ResolveByConst(System.String)">
            <summary>
            通过拼音简码常量获取
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.FirstLowerCase(System.String)">
            <summary>
            首字母小写
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.GetStrArray(System.String,System.Char,System.Boolean)">
            <summary>
            把字符串按照分隔符转换成 List
            </summary>
            <param name="str">源字符串</param>
            <param name="speater">分隔符</param>
            <param name="toLower">是否转换为小写</param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.String.GetStrArray(System.String)">
            <summary>
            把字符串按照[,]分割转换为数组
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.String.GetArrayStr(System.Collections.Generic.List{System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.String.GetArrayValueStr(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.String.DelLastComma(System.String)">
            <summary>
            删除最后结尾的一个逗号
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.DelLastChar(System.String,System.String)">
            <summary>
            删除最后结尾的指定字符后的字符
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.String.ToSBC(System.String)">
            <summary>
            转全角的函数(SBC case)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.String.ToDBC(System.String)">
            <summary>
             转半角的函数(SBC case)
            </summary>
            <param name="input">输入</param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.String.GetSubStringList(System.String,System.Char)">
            <summary>
            把字符串按照指定分隔符装成 List 去除重复
            </summary>
            <param name="o_str"></param>
            <param name="sepeater"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.String.RemoveEnd(System.String,System.String)">
            <summary>
            移除末尾字符串
            </summary>
            <param name="value">值</param>
            <param name="removeValue">要移除的值</param>
        </member>
        <member name="M:PoJun.Util.Helpers.String.SplitWordGroup(System.String,System.Char)">
            <summary>
            分隔词组
            </summary>
            <param name="value">值</param>
            <param name="separator">分隔符，默认使用"-"分隔</param>
        </member>
        <member name="T:PoJun.Util.Helpers.Thread">
            <summary>
            线程操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Thread.WaitAll(System.Action[])">
            <summary>
            执行多个操作，多个操作将同时执行
            </summary>
            <param name="actions">操作集合</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Thread.ParallelExecute(System.Action[])">
            <summary>
            并发执行多个操作
            </summary>
            <param name="actions">操作集合</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Thread.ParallelExecute(System.Action,System.Int32,System.Threading.Tasks.ParallelOptions)">
            <summary>
            重复的并发执行操作
            </summary>
            <param name="action">操作</param>
            <param name="count">执行次数</param>
            <param name="options">并发执行配置</param>
        </member>
        <member name="T:PoJun.Util.Helpers.Time">
            <summary>
            时间操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.GetUnixTimestamp">
            <summary>
            获取Unix时间戳
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.GetUnixTimestamp(System.DateTime)">
            <summary>
            获取Unix时间戳
            </summary>
            <param name="time">时间</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.GetTimeFromUnixTimestamp(System.Int64)">
            <summary>
            从Unix时间戳获取时间
            </summary>
            <param name="timestamp">Unix时间戳</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.FirstDayOfMonth">
            <summary>
            得到本月第一天
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.FirstDayOfMonth(System.DateTime)">
            <summary>
            得到指定日期的当月第一天
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.LastDayOfMonth">
            <summary>
            得到本月最后一天
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.LastDayOfMonth(System.DateTime)">
            <summary>
            得到指定日期当月的最后一天
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.GetMillisecond">
            <summary>
            获取当前时间的毫秒数
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.GetDaysNumber">
            <summary>
            获取当前时间的天数
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.GetAppointDaysNumber(System.DateTime)">
            <summary>
            获取指定日期的天数
            </summary>
            <param name="appointDay">指定日期</param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.ConvertDateTimeToUnix(System.DateTime)">
            <summary>
            DateTime转Unix
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.ConvertDateTimeToUnixTo10(System.DateTime)">
            <summary>
            DateTime转Unix
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.ConvertUnixToDateTime(System.Int64)">
            <summary>
            Unix转DateTime
            </summary>
            <param name="unix"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Time.ConvertUnixToDateTimeTo10(System.Int64)">
            <summary>
            Unix转DateTime(10位) 
            </summary>
            <param name="unix"></param>
            <returns></returns>
        </member>
        <member name="T:PoJun.Util.Helpers.Url">
            <summary>
            Url操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Url.Combine(System.String[])">
            <summary>
            合并Url
            </summary>
            <param name="urls">url片断，范例：Url.Combine( "http://a.com","b" ),返回 "http://a.com/b"</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Url.Join(System.String,System.String)">
            <summary>
            连接Url，范例：Url.Join( "http://a.com","b=1" ),返回 "http://a.com?b=1"
            </summary>
            <param name="url">Url，范例：http://a.com</param>
            <param name="param">参数，范例：b=1</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Url.GetUrl(System.String)">
            <summary>
            获取Url
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Url.AddUrlParams(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            URL添加参数
            </summary>
            <param name="originUrl"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Url.GetUrlParams(System.String,System.String@)">
            <summary>
            获取Url参数
            </summary>
            <param name="originUrl"></param>
            <param name="baseUrl"></param>
            <returns></returns>
        </member>
        <member name="T:PoJun.Util.Helpers.Web">
            <summary>
            Web操作
            </summary>
        </member>
        <member name="F:PoJun.Util.Helpers.Web.ServiceProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.Client">
            <summary>
            Web客户端，用于发送Http请求
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.Client``1">
            <summary>
            Web客户端，用于发送Http请求
            </summary>
            <typeparam name="TResult">返回结果类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.GetClientIP">
            <summary>
            获取客户端IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.GetLanIp">
            <summary>
            获取局域网IP
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.IPConvertLong(System.String)">
            <summary>
            将一个IP字符串转为Long型
            </summary>
            <param name="ip">ip</param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.LongConvertIP(System.Int64)">
            <summary>
            将一个Long型的ip转成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.IsIPAddress(System.String)">
            <summary>  
            判断是否是IP地址格式 0.0.0.0  
            </summary>  
            <param name="str1">待判断的IP地址</param>  
            <returns>true or false</returns>  
        </member>
        <member name="P:PoJun.Util.Helpers.Web.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.AddUrlParams(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            URL添加参数
            </summary>
            <param name="originUrl"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.GetUrlParams(System.String,System.String@)">
            <summary>
            获取Url参数
            </summary>
            <param name="originUrl"></param>
            <param name="baseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.UrlEncode(System.String,System.Boolean)">
            <summary>
            Url编码
            </summary>
            <param name="url">url</param>
            <param name="isUpper">编码字符是否转成大写,范例,"http://"转成"http%3A%2F%2F"</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.UrlEncode(System.String,System.String,System.Boolean)">
            <summary>
            Url编码
            </summary>
            <param name="url">url</param>
            <param name="encoding">字符编码</param>
            <param name="isUpper">编码字符是否转成大写,范例,"http://"转成"http%3A%2F%2F"</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.UrlEncode(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Url编码
            </summary>
            <param name="url">url</param>
            <param name="encoding">字符编码</param>
            <param name="isUpper">编码字符是否转成大写,范例,"http://"转成"http%3A%2F%2F"</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.GetUpperEncode(System.String)">
            <summary>
            获取大写编码字符串
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.UrlDecode(System.String)">
            <summary>
            Url解码
            </summary>
            <param name="url">url</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.UrlDecode(System.String,System.Text.Encoding)">
            <summary>
            Url解码
            </summary>
            <param name="url">url</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.DownloadFile(System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="filePath">文件绝对路径</param>
            <param name="fileName">文件名,包含扩展名</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.DownloadFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            下载文件
            </summary>
            <param name="filePath">文件绝对路径</param>
            <param name="fileName">文件名,包含扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.Download(System.IO.Stream,System.String)">
            <summary>
            下载
            </summary>
            <param name="stream">流</param>
            <param name="fileName">文件名,包含扩展名</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.Download(System.IO.Stream,System.String,System.Text.Encoding)">
            <summary>
            下载
            </summary>
            <param name="stream">流</param>
            <param name="fileName">文件名,包含扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.Download(System.Byte[],System.String)">
            <summary>
            下载
            </summary>
            <param name="bytes">字节流</param>
            <param name="fileName">文件名,包含扩展名</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Web.Download(System.Byte[],System.String,System.Text.Encoding)">
            <summary>
            下载
            </summary>
            <param name="bytes">字节流</param>
            <param name="fileName">文件名,包含扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="T:PoJun.Util.Helpers.Xml">
            <summary>
            Xml操作 - 生成器
            </summary>
            <summary>
            Xml操作 - 工具
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.#ctor(System.String)">
            <summary>
            初始化Xml操作
            </summary>
            <param name="xml">Xml字符串</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.GetXml(System.String)">
            <summary>
            获取Xml字符串
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.Xml.Document">
            <summary>
            Xml文档
            </summary>
        </member>
        <member name="P:PoJun.Util.Helpers.Xml.Root">
            <summary>
            Xml根节点
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.AddNode(System.String,System.Object,System.Xml.XmlNode)">
            <summary>
            添加节点
            </summary>
            <param name="name">节点名称</param>
            <param name="value">值</param>
            <param name="parent">父节点</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.CreateNode(System.String,System.Object,System.Xml.XmlNodeType)">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.GetParent(System.Xml.XmlNode)">
            <summary>
            获取父节点
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.AddCDataNode(System.Object,System.Xml.XmlNode)">
            <summary>
            添加CDATA节点
            </summary>
            <param name="value">值</param>
            <param name="parent">父节点</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.AddCDataNode(System.Object,System.String)">
            <summary>
            添加CDATA节点
            </summary>
            <param name="value">值</param>
            <param name="parentName">父节点名称</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.ToString">
            <summary>
            输出Xml
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.ToDocument(System.String)">
            <summary>
            将Xml字符串转换为XDocument
            </summary>
            <param name="xml">Xml字符串</param>
        </member>
        <member name="M:PoJun.Util.Helpers.Xml.ToElements(System.String)">
            <summary>
            将Xml字符串转换为XElement列表
            </summary>
            <param name="xml">Xml字符串</param>
        </member>
        <member name="T:PoJun.Util.Helpers.ZipHelper">
            <summary>
            Class Name：【压缩解压类】
            Powered By：PoJun
            Create Date：2011-11-8
            </summary>
        </member>
        <member name="M:PoJun.Util.Helpers.ZipHelper.Zip(System.String,System.String,System.String)">
            <summary>
            压缩
            </summary>
            <param name="outputDirectory">压缩文件输出目录【硬盘物理路径】</param>
            <param name="inputDirectory">待压缩的文件夹【硬盘物理路径】(最后不能带\或/)</param>
            <param name="zipName">压缩文件名称</param>
            <returns>压缩后的目录及文件名称</returns>
        </member>
        <member name="M:PoJun.Util.Helpers.ZipHelper.UnZip(System.String,System.String)">
            <summary>
            解压缩
            </summary>
            <param name="inputDirectory">待解压文件地址(硬盘物理路径)</param>
            <param name="outputDirectory">解压文件夹地址(硬盘物理路径)</param>
        </member>
        <member name="T:PoJun.Util.Item">
            <summary>
            列表项
            </summary>
        </member>
        <member name="M:PoJun.Util.Item.#ctor(System.String,System.Object,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            初始化
            </summary>
            <param name="text">文本</param>
            <param name="value">值</param>
            <param name="sortId">排序号</param>
            <param name="group">组</param>
            <param name="disabled">禁用</param>
        </member>
        <member name="P:PoJun.Util.Item.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:PoJun.Util.Item.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:PoJun.Util.Item.SortId">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:PoJun.Util.Item.Group">
            <summary>
            组
            </summary>
        </member>
        <member name="P:PoJun.Util.Item.Disabled">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:PoJun.Util.Item.CompareTo(PoJun.Util.Item)">
            <summary>
            比较
            </summary>
            <param name="other">其它列表项</param>
        </member>
        <member name="T:PoJun.Util.Maps.Extensions">
            <summary>
            对象映射
            </summary>
        </member>
        <member name="F:PoJun.Util.Maps.Extensions.Sync">
            <summary>
            同步锁
            </summary>
        </member>
        <member name="M:PoJun.Util.Maps.Extensions.MapTo``2(``0,``1)">
            <summary>
            将源对象映射到目标对象
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TDestination">目标类型</typeparam>
            <param name="source">源对象</param>
            <param name="destination">目标对象</param>
        </member>
        <member name="M:PoJun.Util.Maps.Extensions.MapTo``1(System.Object)">
            <summary>
            将源对象映射到目标对象
            </summary>
            <typeparam name="TDestination">目标类型</typeparam>
            <param name="source">源对象</param>
        </member>
        <member name="M:PoJun.Util.Maps.Extensions.MapTo``1(System.Object,``0)">
            <summary>
            将源对象映射到目标对象
            </summary>
        </member>
        <member name="M:PoJun.Util.Maps.Extensions.GetType(System.Object)">
            <summary>
            获取类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Maps.Extensions.GetMap(System.Type,System.Type)">
            <summary>
            获取映射配置
            </summary>
        </member>
        <member name="M:PoJun.Util.Maps.Extensions.ClearConfig">
            <summary>
            清空配置
            </summary>
        </member>
        <member name="M:PoJun.Util.Maps.Extensions.MapToList``1(System.Collections.IEnumerable)">
            <summary>
            将源集合映射到目标集合
            </summary>
            <typeparam name="TDestination">目标元素类型,范例：Sample,不要加List</typeparam>
            <param name="source">源集合</param>
        </member>
        <member name="T:PoJun.Util.Offices.Abstractions.IExcel">
            <summary>
            Excel操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.CreateWorkbook">
            <summary>
            创建工作薄
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.CreateSheet(System.String)">
            <summary>
            创建工作表
            </summary>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.CreateRow(System.Int32)">
            <summary>
            创建行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.CreateCell(PoJun.Util.Offices.Cell)">
            <summary>
            创建单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.Write(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.MergeCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            合并单元格
            </summary>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="startColumnIndex">起始列索引</param>
            <param name="endColumnIndex">结束列索引</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.MergeCell(PoJun.Util.Offices.Cell)">
            <summary>
            合并单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.HeadStyle(PoJun.Util.Offices.Core.Table,PoJun.Util.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.BodyStyle(PoJun.Util.Offices.Core.Table,PoJun.Util.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.FootStyle(PoJun.Util.Offices.Core.Table,PoJun.Util.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Abstractions.IExcel.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">列宽度，设置字符数</param>
        </member>
        <member name="T:PoJun.Util.Offices.Cell">
            <summary>
            单元格
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Cell.#ctor(System.Object,System.Int32,System.Int32)">
            <summary>
            初始化单元格
            </summary>
            <param name="value">值</param>
            <param name="columnSpan">列跨度</param>
            <param name="rowSpan">行跨度</param>
        </member>
        <member name="P:PoJun.Util.Offices.Cell.Row">
            <summary>
            行
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Cell.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Cell.ColumnSpan">
            <summary>
            列跨度
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Cell.RowSpan">
            <summary>
            行跨度
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Cell.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Cell.ColumnIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Cell.EndRowIndex">
            <summary>
            结束行索引
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Cell.EndColumnIndex">
            <summary>
            结束列索引
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Cell.NeedMerge">
            <summary>
            是否需要合并单元格
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Cell.IsNull">
            <summary>
            是否为空单元格
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.CellStyle">
            <summary>
            单元格样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.CellStyle.#ctor">
            <summary>
            初始化单元格样式
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.CellStyle.Alignment">
            <summary>
            水平对齐
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.CellStyle.VerticalAlignment">
            <summary>
            垂直对齐
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.CellStyle.BackgroundColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.CellStyle.FillPattern">
            <summary>
            填充模式
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.CellStyle.BorderColor">
            <summary>
            边框色
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.CellStyle.FontSize">
            <summary>
            字号
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.CellStyle.FontColor">
            <summary>
            字体颜色
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.CellStyle.FontBoldWeight">
            <summary>
            字体加粗
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.CellStyle.IsWrap">
            <summary>
            内容是否自动换行
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.CellStyle.Head">
            <summary>
            创建表头样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.CellStyle.Body">
            <summary>
            创建正文样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.CellStyle.Foot">
            <summary>
            创建页脚样式
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.ExcelExportBase">
            <summary>
            Excel导出
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExcelExportBase.#ctor(PoJun.Util.Offices.ExportFormat,PoJun.Util.Offices.Abstractions.IExcel)">
            <summary>
            初始化Excel导出
            </summary>
            <param name="format">导出格式</param>
            <param name="excel">Excel操作</param>
        </member>
        <member name="F:PoJun.Util.Offices.Core.ExcelExportBase._excel">
            <summary>
            Excel操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExcelExportBase.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExcelExportBase.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExcelExportBase.WriteStream(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExcelExportBase.AddHeader">
            <summary>
            添加表头
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExcelExportBase.CreateRows(System.Collections.Generic.IEnumerable{PoJun.Util.Offices.Core.Row})">
            <summary>
            创建行
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExcelExportBase.AddBody">
            <summary>
            添加正文
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExcelExportBase.AddFoot">
            <summary>
            添加页脚
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.ExportBase">
            <summary>
            导出器
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.ExportBase.Table">
            <summary>
            表
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.ExportBase._format">
            <summary>
            导出格式
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.ExportBase._headStyle">
            <summary>
            表头样式
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.ExportBase._bodyStyle">
            <summary>
            正文样式
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.ExportBase._footStyle">
            <summary>
            页脚样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.#ctor(PoJun.Util.Offices.ExportFormat)">
            <summary>
            初始化导出
            </summary>
            <param name="format">导出格式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.HeadStyle(PoJun.Util.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="style">表头单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.GetHeadStyle">
            <summary>
            获取表头样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.BodyStyle(PoJun.Util.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.GetBodyStyle">
            <summary>
            获取正文样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.FootStyle(PoJun.Util.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.GetFootStyle">
            <summary>
            获取页脚样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Head(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">列标题</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Head(PoJun.Util.Offices.Cell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">表头</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Body``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Body``1(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertiesExpression">属性表达式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Body``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="data">数据</param>
            <param name="propertyNames">属性列表</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.AddEntity``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            添加实体
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.GetPropertyValues``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取属性值集合
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.AdjustColumnWidth``1(``0,System.String[])">
            <summary>
            调整列宽
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.AdjustColumnWidth(System.Reflection.PropertyInfo,System.Int32)">
            <summary>
            调整列宽
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Foot(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="values">值</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Foot(PoJun.Util.Offices.Cell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Write(System.String,System.String)">
            <summary>
            写入文件
            </summary>
            <param name="directory">目录，不包括文件名</param>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.GetFilePath(System.String,System.String)">
            <summary>
            获取文件路径
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.GetFileName(System.String)">
            <summary>
            获取文件名
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.WriteStream(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Download(System.String)">
            <summary>
            下载
            </summary>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.ExportBase.Download(System.String,System.Text.Encoding)">
            <summary>
            下载
            </summary>
            <param name="fileName">文件名，不包括扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="T:PoJun.Util.Offices.Core.FillPattern">
            <summary>
            填充模式
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.HorizontalAlignment">
            <summary>
            水平对齐
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.HorizontalAlignment.Left">
            <summary>
            左对齐
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.HorizontalAlignment.Right">
            <summary>
            右对齐
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.HorizontalAlignment.Center">
            <summary>
            居中对齐
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.IndexManager">
            <summary>
            索引管理器
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.IndexManager.#ctor">
            <summary>
            初始化索引管理器
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.IndexManager._list">
            <summary>
            索引列表
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.IndexManager.GetIndex(System.Int32)">
            <summary>
            获取索引
            </summary>
            <param name="span">跨度</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.IndexManager.AddIndex(System.Int32,System.Int32)">
            <summary>
            添加索引
            </summary>
            <param name="index">索引</param>
            <param name="span">跨度</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.IndexManager.AddIndex(PoJun.Util.Offices.Core.IndexRange,System.Int32,System.Int32)">
            <summary>
            添加索引
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.IndexRange">
            <summary>
            索引范围
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.IndexRange.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化索引范围
            </summary>
            <param name="index">当前索引</param>
            <param name="endIndex">结束索引</param>
        </member>
        <member name="P:PoJun.Util.Offices.Core.IndexRange.Index">
            <summary>
            当前索引
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.IndexRange.EndIndex">
            <summary>
            结束索引
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.IndexRange.GetIndex(System.Int32)">
            <summary>
            获取索引
            </summary>
            <param name="span">跨度</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.IndexRange.Contains(System.Int32)">
            <summary>
            判断是否包含该索引
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.IndexRange.Split(System.Int32,System.Int32)">
            <summary>
            分割索引范围
            </summary>
            <param name="index">索引</param>
            <param name="span">跨度</param>
        </member>
        <member name="P:PoJun.Util.Offices.Core.IndexRange.IsEnd">
            <summary>
            是否已结束
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.NullCell">
            <summary>
            空单元格
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.NullCell.#ctor">
            <summary>
            初始化空单元格
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.NullCell.IsNull">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.Range">
            <summary>
            区
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Range.#ctor(System.Int32)">
            <summary>
            初始化区
            </summary>
            <param name="startIndex">起始索引</param>
        </member>
        <member name="F:PoJun.Util.Offices.Core.Range._rows">
            <summary>
            行集
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.Range._startIndex">
            <summary>
            起始索引
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Range.Item(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Range.GetRow(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index">外部索引</param>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Range.ColumnNumber">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Range.Count">
            <summary>
            行数
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Range.GetRows">
            <summary>
            获取行
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Range.AddRow(System.Int32,System.Collections.Generic.IEnumerable{PoJun.Util.Offices.Cell})">
            <summary>
            添加行
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Range.CreateRow(System.Int32)">
            <summary>
            创建行
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Range.AddCell(PoJun.Util.Offices.Core.Row,PoJun.Util.Offices.Cell,System.Int32)">
            <summary>
            添加单元格
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Range.AddPlaceholderCell(PoJun.Util.Offices.Cell,System.Int32)">
            <summary>
            为下方受rowspan影响的行添加占位单元格
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Range.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.Row">
            <summary>
            行
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Row.#ctor(System.Int32)">
            <summary>
            初始化行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="F:PoJun.Util.Offices.Core.Row._indexManager">
            <summary>
            索引管理器
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Row.Cells">
            <summary>
            单元格列表
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Row.Item(System.Int32)">
            <summary>
            获取单元格
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Row.ColumnNumber">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Row.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Row.Add(System.Object,System.Int32,System.Int32)">
            <summary>
            添加单元格
            </summary>
            <param name="value">值</param>
            <param name="columnSpan">列跨度</param>
            <param name="rowSpan">行跨度</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Row.Add(PoJun.Util.Offices.Cell)">
            <summary>
            添加单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Row.SetColumnIndex(PoJun.Util.Offices.Cell)">
            <summary>
            设置列索引
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.Table">
            <summary>
            表格
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.Table._header">
            <summary>
            头部
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.Table._body">
            <summary>
            正文
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.Table._footer">
            <summary>
            底部
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.Table._rowIndex">
            <summary>
            当前行索引
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.#ctor">
            <summary>
            初始化表格
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Table.Title">
            <summary>
            总标题
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Table.ColumnNumber">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Table.HeadRowCount">
            <summary>
            表头行数
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Table.BodyRowCount">
            <summary>
            正文行数
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Table.FootRowCount">
            <summary>
            页脚行数
            </summary>
        </member>
        <member name="P:PoJun.Util.Offices.Core.Table.Count">
            <summary>
            总行数
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.GetHeader">
            <summary>
            获取表头
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.GetBody">
            <summary>
            获取表格正文
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.GetFooter">
            <summary>
            获取页脚
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.AddHeadRow(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">标题</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.AddHeadRow(PoJun.Util.Offices.Cell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">表头</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.AddRowToHeader(System.Collections.Generic.IEnumerable{PoJun.Util.Offices.Cell})">
            <summary>
            添加表头行
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.ResetFirstColumnSpan">
            <summary>
            重置第一行的列跨度，第一行可能为总标题
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.AddBodyRow(System.Object[])">
            <summary>
            添加正文
            </summary>
            <param name="cellValues">值</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.AddBodyRow(System.Collections.Generic.IEnumerable{PoJun.Util.Offices.Cell})">
            <summary>
            添加正文
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.GetBodyRange">
            <summary>
            获取正文区域
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.AddFootRow(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="cellValues">值</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.AddFootRow(PoJun.Util.Offices.Cell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.GetFootRange">
            <summary>
            获取页脚区域
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Core.Table.ClearHeader">
            <summary>
            清空表头
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Core.VerticalAlignment">
            <summary>
            垂直对齐
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.VerticalAlignment.Top">
            <summary>
            顶部对齐
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.VerticalAlignment.Bottom">
            <summary>
            底部对齐
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Core.VerticalAlignment.Center">
            <summary>
            居中对齐
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.ExportFormat">
            <summary>
            导出格式
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.ExportFormat.Xls">
            <summary>
            Excel 2003
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.ExportFormat.Xlsx">
            <summary>
            Excel 2007+
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.IExport">
            <summary>
            文件导出器
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.HeadStyle(PoJun.Util.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.BodyStyle(PoJun.Util.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.FootStyle(PoJun.Util.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Head(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">列标题</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Head(PoJun.Util.Offices.Cell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Body``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Body``1(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertiesExpression">属性列表表达式，范例：t => new object[]{t.A,t.B}</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Body``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertyNames">属性列表,范例："A","B"</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Foot(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="values">值</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Foot(PoJun.Util.Offices.Cell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Write(System.String,System.String)">
            <summary>
            写入文件
            </summary>
            <param name="directory">目录，不包括文件名</param>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Download(System.String)">
            <summary>
            下载
            </summary>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:PoJun.Util.Offices.IExport.Download(System.String,System.Text.Encoding)">
            <summary>
            下载
            </summary>
            <param name="fileName">文件名，不包括扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="T:PoJun.Util.Offices.IExportFactory">
            <summary>
            文件导出工厂
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.IExportFactory.Create(PoJun.Util.Offices.ExportFormat)">
            <summary>
            创建文件导出
            </summary>
            <param name="format">导出格式</param>
        </member>
        <member name="T:PoJun.Util.Offices.Npoi.CellStyleResolver">
            <summary>
            单元格样式解析器
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.CellStyleResolver.#ctor(NPOI.SS.UserModel.IWorkbook,PoJun.Util.Offices.CellStyle)">
            <summary>
            初始化单元格样式解析器
            </summary>
            <param name="workbook">工作薄</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.CellStyleResolver._workbook">
            <summary>
            工作薄
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.CellStyleResolver._style">
            <summary>
            单元格样式
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.CellStyleResolver._result">
            <summary>
            单元格样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.CellStyleResolver.Resolve">
            <summary>
            解析为Npoi单元格样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.CellStyleResolver.GetHorizontalAlignment">
            <summary>
            获取水平对齐
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.CellStyleResolver.GetVerticalAlignment">
            <summary>
            获取垂直对齐
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.CellStyleResolver.SetBackgroundColor">
            <summary>
            设置背景色
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.CellStyleResolver.SetFillPattern">
            <summary>
            设置填充模式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.CellStyleResolver.SetBorderColor">
            <summary>
            设置边框颜色
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.CellStyleResolver.SetFont">
            <summary>
            设置字体
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.CellStyleResolver.Resolve(NPOI.SS.UserModel.IWorkbook,PoJun.Util.Offices.CellStyle)">
            <summary>
            解析单元格样式
            </summary>
            <param name="workbook">工作薄</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="T:PoJun.Util.Offices.Npoi.ColorResolver">
            <summary>
            颜色转换
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ColorResolver.Resolve(PoJun.Util.Offices.Core.Color)">
            <summary>
            转换
            </summary>
            <param name="color">颜色枚举</param>
        </member>
        <member name="T:PoJun.Util.Offices.Npoi.Excel2003">
            <summary>
            Npoi Excel2003操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.Excel2003.GetWorkbook">
            <summary>
            创建工作薄
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Npoi.Excel2003Export">
            <summary>
            Npoi Excel2003 导出操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.Excel2003Export.#ctor">
            <summary>
            初始化Npoi Excel2003 导出操作
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Npoi.Excel2007">
            <summary>
            Npoi Excel2007操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.Excel2007.GetWorkbook">
            <summary>
            创建工作薄
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Npoi.Excel2007Export">
            <summary>
            Npoi Excel2007 导出操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.Excel2007Export.#ctor">
            <summary>
            初始化Npoi Excel2003 导出操作
            </summary>
        </member>
        <member name="T:PoJun.Util.Offices.Npoi.ExcelBase">
            <summary>
            Npoi Excel操作
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.ExcelBase._workbook">
            <summary>
            Excel工作薄
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.ExcelBase._sheet">
            <summary>
            Excel工作表
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.ExcelBase._row">
            <summary>
            当前行
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.ExcelBase._cell">
            <summary>
            当前单元格
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.ExcelBase._dateFormat">
            <summary>
            日期格式
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.ExcelBase._headStyle">
            <summary>
            表头样式
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.ExcelBase._bodyStyle">
            <summary>
            正文样式
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.ExcelBase._footStyle">
            <summary>
            页脚样式
            </summary>
        </member>
        <member name="F:PoJun.Util.Offices.Npoi.ExcelBase._dateStyle">
            <summary>
            日期样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.#ctor">
            <summary>
            初始化Npoi操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.CreateWorkbook">
            <summary>
            创建工作薄
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.GetWorkbook">
            <summary>
            创建工作薄
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.CreateSheet(System.String)">
            <summary>
            创建工作表
            </summary>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.CreateRow(System.Int32)">
            <summary>
            创建行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.GetOrCreateRow(System.Int32)">
            <summary>
            获取行，如果不存在则创建
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.CreateCell(PoJun.Util.Offices.Cell)">
            <summary>
            创建单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.GetOrCreateCell(NPOI.SS.UserModel.IRow,System.Int32)">
            <summary>
            获取单元格，如果不存在则创建
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.SetCellValue(System.Object)">
            <summary>
            设置单元格的值
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.MergeCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            合并单元格
            </summary>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="startColumnIndex">起始列索引</param>
            <param name="endColumnIndex">结束列索引</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.MergeCell(PoJun.Util.Offices.Cell)">
            <summary>
            合并单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.Write(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.CreateDateStyle">
            <summary>
            创建日期样式
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.Style(System.Int32,System.Int32,System.Int32,System.Int32,NPOI.SS.UserModel.ICellStyle)">
            <summary>
            设置样式
            </summary>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="startColumnIndex">起始列索引</param>
            <param name="endColumnIndex">结束列索引</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.HeadStyle(PoJun.Util.Offices.Core.Table,PoJun.Util.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.BodyStyle(PoJun.Util.Offices.Core.Table,PoJun.Util.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.FootStyle(PoJun.Util.Offices.Core.Table,PoJun.Util.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExcelBase.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">列宽度，设置字符数</param>
        </member>
        <member name="T:PoJun.Util.Offices.Npoi.ExportFactory">
            <summary>
            导出操作工厂
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExportFactory.Create(PoJun.Util.Offices.ExportFormat)">
            <summary>
            创建导出器
            </summary>
            <param name="format">导出格式</param>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExportFactory.CreateExcel2003Export">
            <summary>
            创建Npoi Excel 2003导出器
            </summary>
        </member>
        <member name="M:PoJun.Util.Offices.Npoi.ExportFactory.CreateExcel2007Export">
            <summary>
            创建Npoi Excel 2007导出器
            </summary>
        </member>
        <member name="T:PoJun.Util.Parameters.Formats.IParameterFormat">
            <summary>
            参数格式化器
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.Formats.IParameterFormat.Format(System.String,System.String)">
            <summary>
            格式化
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Parameters.Formats.IParameterFormat.Join(System.String,System.String)">
            <summary>
            连接参数
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="T:PoJun.Util.Parameters.Formats.ParameterFormatBase">
            <summary>
            参数格式化器
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.Formats.ParameterFormatBase.Format(System.String,System.String)">
            <summary>
            格式化
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="P:PoJun.Util.Parameters.Formats.ParameterFormatBase.FormatSeparator">
            <summary>
            格式化分割符
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.Formats.ParameterFormatBase.Join(System.String,System.String)">
            <summary>
            连接参数
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="P:PoJun.Util.Parameters.Formats.ParameterFormatBase.JoinSeparator">
            <summary>
            连接符
            </summary>
        </member>
        <member name="T:PoJun.Util.Parameters.Formats.UrlParameterFormat">
            <summary>
            Url参数格式化器
            </summary>
        </member>
        <member name="F:PoJun.Util.Parameters.Formats.UrlParameterFormat.Instance">
            <summary>
            Url参数格式化器实例
            </summary>
        </member>
        <member name="P:PoJun.Util.Parameters.Formats.UrlParameterFormat.FormatSeparator">
            <summary>
            格式化分割符
            </summary>
        </member>
        <member name="P:PoJun.Util.Parameters.Formats.UrlParameterFormat.JoinSeparator">
            <summary>
            连接符
            </summary>
        </member>
        <member name="T:PoJun.Util.Parameters.ParameterBuilder">
            <summary>
            参数生成器
            </summary>
        </member>
        <member name="F:PoJun.Util.Parameters.ParameterBuilder._params">
            <summary>
            参数集合
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.#ctor">
            <summary>
            初始化参数生成器
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.#ctor(PoJun.Util.Parameters.ParameterBuilder)">
            <summary>
            初始化参数生成器
            </summary>
            <param name="builder">参数生成器</param>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            初始化参数生成器
            </summary>
            <param name="dictionary">字典</param>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.Add(System.String,System.Object)">
            <summary>
            添加参数，如果参数已存在则替换
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.GetValue(System.Object)">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.GetDictionary">
            <summary>
            获取字典
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.GetKeyValuePairs">
            <summary>
            获取键值对集合
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.Remove(System.String)">
            <summary>
            移除参数
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.ToJson">
            <summary>
            转换为Json
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.Result(PoJun.Util.Parameters.Formats.IParameterFormat,System.Boolean)">
            <summary>
            获取结果
            </summary>
            <param name="format">参数格式化器</param>
            <param name="isSort">是否按参数名排序</param>
        </member>
        <member name="M:PoJun.Util.Parameters.ParameterBuilder.GetDictionary(System.Boolean)">
            <summary>
            获取字典
            </summary>
        </member>
        <member name="T:PoJun.Util.Parameters.UrlParameterBuilder">
            <summary>
            Url参数生成器
            </summary>
        </member>
        <member name="P:PoJun.Util.Parameters.UrlParameterBuilder.ParameterBuilder">
            <summary>
            参数生成器
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.#ctor">
            <summary>
            初始化Url参数生成器
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.#ctor(PoJun.Util.Parameters.UrlParameterBuilder)">
            <summary>
            初始化Url参数生成器
            </summary>
            <param name="builder">Url参数生成器</param>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.#ctor(System.String,PoJun.Util.Parameters.UrlParameterBuilder)">
            <summary>
            初始化Url参数生成器
            </summary>
            <param name="url">Url</param>
            <param name="builder">Url参数生成器</param>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.LoadUrl(System.String)">
            <summary>
            加载Url
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.Add(System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.GetDictionary">
            <summary>
            获取字典
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.GetKeyValuePairs">
            <summary>
            获取键值对集合
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.Result(System.Boolean)">
            <summary>
            获取结果，格式：参数名=参数值&amp;参数名=参数值
            </summary>
            <param name="isSort">是否按参数名排序</param>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.JoinUrl(System.String)">
            <summary>
            连接Url
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.GetUrl(System.String)">
            <summary>
            获取Url
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:PoJun.Util.Parameters.UrlParameterBuilder.Remove(System.String)">
            <summary>
            移除参数
            </summary>
            <param name="key">键</param>
        </member>
        <member name="T:PoJun.Util.QrCoder.ErrorCorrectionLevel">
            <summary>
            容错级别
            </summary>
        </member>
        <member name="F:PoJun.Util.QrCoder.ErrorCorrectionLevel.L">
            <summary>
            可以纠正最大7%的错误
            </summary>
        </member>
        <member name="F:PoJun.Util.QrCoder.ErrorCorrectionLevel.M">
            <summary>
            可以纠正最大15%的错误
            </summary>
        </member>
        <member name="F:PoJun.Util.QrCoder.ErrorCorrectionLevel.Q">
            <summary>
            可以纠正最大25%的错误
            </summary>
        </member>
        <member name="F:PoJun.Util.QrCoder.ErrorCorrectionLevel.H">
            <summary>
            可以纠正最大30%的错误
            </summary>
        </member>
        <member name="T:PoJun.Util.QrCoder.IQrCodeService">
            <summary>
            二维码服务
            </summary>
        </member>
        <member name="M:PoJun.Util.QrCoder.IQrCodeService.Size(PoJun.Util.QrCoder.QrSize)">
            <summary>
            设置二维码尺寸
            </summary>
            <param name="size">二维码尺寸</param>
        </member>
        <member name="M:PoJun.Util.QrCoder.IQrCodeService.Size(System.Int32)">
            <summary>
            设置二维码尺寸
            </summary>
            <param name="size">二维码尺寸</param>
        </member>
        <member name="M:PoJun.Util.QrCoder.IQrCodeService.Correction(PoJun.Util.QrCoder.ErrorCorrectionLevel)">
            <summary>
            容错处理
            </summary>
            <param name="level">容错级别</param>
        </member>
        <member name="M:PoJun.Util.QrCoder.IQrCodeService.CreateQrCode(System.String)">
            <summary>
            创建二维码
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="T:PoJun.Util.QrCoder.QrCoderService">
            <summary>
            QRCoder二维码服务
            </summary>
        </member>
        <member name="F:PoJun.Util.QrCoder.QrCoderService._size">
            <summary>
            二维码尺寸
            </summary>
        </member>
        <member name="F:PoJun.Util.QrCoder.QrCoderService._level">
            <summary>
            容错级别
            </summary>
        </member>
        <member name="M:PoJun.Util.QrCoder.QrCoderService.#ctor">
            <summary>
            初始化QRCoder组件二维码服务
            </summary>
        </member>
        <member name="M:PoJun.Util.QrCoder.QrCoderService.Size(PoJun.Util.QrCoder.QrSize)">
            <summary>
            设置二维码尺寸
            </summary>
            <param name="size">二维码尺寸</param>
        </member>
        <member name="M:PoJun.Util.QrCoder.QrCoderService.Size(System.Int32)">
            <summary>
            设置二维码尺寸
            </summary>
            <param name="size">二维码尺寸</param>
        </member>
        <member name="M:PoJun.Util.QrCoder.QrCoderService.Correction(PoJun.Util.QrCoder.ErrorCorrectionLevel)">
            <summary>
            容错处理
            </summary>
            <param name="level">容错级别</param>
        </member>
        <member name="M:PoJun.Util.QrCoder.QrCoderService.CreateQrCode(System.String)">
            <summary>
            创建二维码
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="T:PoJun.Util.QrCoder.QrSize">
            <summary>
            二维码尺寸
            </summary>
        </member>
        <member name="F:PoJun.Util.QrCoder.QrSize.Small">
            <summary>
            小
            </summary>
        </member>
        <member name="F:PoJun.Util.QrCoder.QrSize.Middle">
            <summary>
            中
            </summary>
        </member>
        <member name="F:PoJun.Util.QrCoder.QrSize.Large">
            <summary>
            大
            </summary>
        </member>
        <member name="T:PoJun.Util.Reflections.Finder">
            <summary>
            类型查找器
            </summary>
        </member>
        <member name="F:PoJun.Util.Reflections.Finder.SkipAssemblies">
            <summary>
            跳过的程序集
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.GetAssemblies">
            <summary>
            获取程序集列表
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.GetAssembliesFromCurrentAppDomain">
            <summary>
            从当前应用程序域获取程序集列表
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.Match(System.Reflection.Assembly)">
            <summary>
            程序集是否匹配
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.LoadAssemblies(System.String)">
            <summary>
            加载程序集到当前应用程序域
            </summary>
            <param name="path">目录绝对路径</param>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.Match(System.Reflection.AssemblyName)">
            <summary>
            程序集是否匹配
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.Find``1(System.Collections.Generic.List{System.Reflection.Assembly})">
            <summary>
            查找类型列表
            </summary>
            <typeparam name="T">查找类型</typeparam>
            <param name="assemblies">在指定的程序集列表中查找</param>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.Find(System.Type,System.Collections.Generic.List{System.Reflection.Assembly})">
            <summary>
            查找类型列表
            </summary>
            <param name="findType">查找类型</param>
            <param name="assemblies">在指定的程序集列表中查找</param>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.GetTypes(System.Type,System.Reflection.Assembly)">
            <summary>
            获取类型列表
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.AddType(System.Collections.Generic.List{System.Type},System.Type,System.Type)">
            <summary>
            添加类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.Finder.MatchGeneric(System.Type,System.Type)">
            <summary>
            泛型匹配
            </summary>
        </member>
        <member name="T:PoJun.Util.Reflections.IFind">
            <summary>
            类型查找器
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.IFind.GetAssemblies">
            <summary>
            获取程序集列表
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.IFind.Find``1(System.Collections.Generic.List{System.Reflection.Assembly})">
            <summary>
            查找类型列表
            </summary>
            <typeparam name="T">查找类型</typeparam>
            <param name="assemblies">在指定的程序集列表中查找</param>
        </member>
        <member name="M:PoJun.Util.Reflections.IFind.Find(System.Type,System.Collections.Generic.List{System.Reflection.Assembly})">
            <summary>
            查找类型列表
            </summary>
            <param name="findType">查找类型</param>
            <param name="assemblies">在指定的程序集列表中查找</param>
        </member>
        <member name="T:PoJun.Util.Reflections.WebFinder">
            <summary>
            Web类型查找器
            </summary>
        </member>
        <member name="M:PoJun.Util.Reflections.WebFinder.GetAssemblies">
            <summary>
            获取程序集列表
            </summary>
        </member>
        <member name="T:PoJun.Util.Webs.Clients.HttpContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpContentType.FormUrlEncoded">
            <summary>
            application/x-www-form-urlencoded
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpContentType.Json">
            <summary>
            application/json
            </summary>
        </member>
        <member name="T:PoJun.Util.Webs.Clients.HttpRequest">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequest._successAction">
            <summary>
            执行成功的回调函数
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequest._successStatusCodeAction">
            <summary>
            执行成功的回调函数
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest.#ctor(System.Net.Http.HttpMethod,System.String)">
            <summary>
            初始化Http请求
            </summary>
            <param name="httpMethod">Http动词</param>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest.OnSuccess(System.Action{System.String})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,参数为响应结果</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest.OnSuccess(System.Action{System.String,System.Net.HttpStatusCode})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest.SuccessHandler(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            成功处理操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest.ResultFromJson``1">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest.ResultFromJsonAsync``1">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="T:PoJun.Util.Webs.Clients.HttpRequest`1">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequest`1._successAction">
            <summary>
            执行成功的回调函数
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequest`1._successStatusCodeAction">
            <summary>
            执行成功的回调函数
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequest`1._convertAction">
            <summary>
            执行成功的转换函数
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest`1.#ctor(System.Net.Http.HttpMethod,System.String)">
            <summary>
            初始化Http请求
            </summary>
            <param name="httpMethod">Http动词</param>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest`1.OnSuccess(System.Action{`0},System.Func{System.String,`0})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,参数为响应结果</param>
            <param name="convertAction">将结果字符串转换为指定类型，当默认转换实现无法转换时使用</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest`1.OnSuccess(System.Action{`0,System.Net.HttpStatusCode},System.Func{System.String,`0})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
            <param name="convertAction">将结果字符串转换为指定类型，当默认转换实现无法转换时使用</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest`1.SuccessHandler(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            成功处理操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest`1.ConvertTo(System.String,System.String)">
            <summary>
            将结果字符串转换为指定类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest`1.ResultFromJson">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequest`1.ResultFromJsonAsync">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="T:PoJun.Util.Webs.Clients.HttpRequestBase`1">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._url">
            <summary>
            地址
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._httpMethod">
            <summary>
            Http动词
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._params">
            <summary>
            参数集合
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._json">
            <summary>
            Json参数
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._contentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._cookieContainer">
            <summary>
            Cookie容器
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._timeout">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._headers">
            <summary>
            请求头集合
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._failAction">
            <summary>
            执行失败的回调函数
            </summary>
        </member>
        <member name="F:PoJun.Util.Webs.Clients.HttpRequestBase`1._failStatusCodeAction">
            <summary>
            执行失败的回调函数
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.#ctor(System.Net.Http.HttpMethod,System.String)">
            <summary>
            初始化Http请求
            </summary>
            <param name="httpMethod">Http动词</param>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.ContentType(PoJun.Util.Webs.Clients.HttpContentType)">
            <summary>
            设置内容类型
            </summary>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.ContentType(System.String)">
            <summary>
            设置内容类型
            </summary>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.This">
            <summary>
            返回自身
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.Cookie(System.String,System.String,System.Double)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="expiresDate">有效时间，单位：天</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.Cookie(System.String,System.String,System.DateTime)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="expiresDate">到期时间</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.Cookie(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="path">源服务器URL子集</param>
            <param name="domain">所属域</param>
            <param name="expiresDate">到期时间</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.Cookie(System.Net.Cookie)">
            <summary>
            设置Cookie
            </summary>
            <param name="cookie">cookie</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.Timeout(System.Int32)">
            <summary>
            超时时间
            </summary>
            <param name="timeout">超时时间</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.Header``1(System.String,``0)">
            <summary>
            请求头
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.Data(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            添加参数字典
            </summary>
            <param name="parameters">参数字典</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.Data``1(System.String,``0)">
            <summary>
            添加参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.JsonData``1(``0)">
            <summary>
            添加Json参数
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.OnFail(System.Action{System.String})">
            <summary>
            请求失败回调函数
            </summary>
            <param name="action">执行失败的回调函数,参数为响应结果</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.OnFail(System.Action{System.String,System.Net.HttpStatusCode})">
            <summary>
            请求失败回调函数
            </summary>
            <param name="action">执行失败的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.Result">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.GetContentType(System.Net.Http.HttpResponseMessage)">
            <summary>
            获取内容类型
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.SendBefore">
            <summary>
            发送前操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.SendAsync">
            <summary>
            发送请求
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.SendAfter(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            发送后操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.IsSuccess(System.Net.HttpStatusCode)">
            <summary>
            发送请求是否成功
            </summary>
            <param name="statusCode">状态码</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.SuccessHandler(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            成功处理操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.FailHandler(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            失败处理操作
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.ResultAsync">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.CreateHttpClient">
            <summary>
            创建请求客户端
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.CreateRequestMessage">
            <summary>
            创建请求消息
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.CreateHttpContent">
            <summary>
            创建请求内容
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.HttpRequestBase`1.CreateJsonContent">
            <summary>
            创建json内容类型
            </summary>
        </member>
        <member name="T:PoJun.Util.Webs.Clients.IHttpRequest">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IHttpRequest.OnSuccess(System.Action{System.String})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,参数为响应结果</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IHttpRequest.OnSuccess(System.Action{System.String,System.Net.HttpStatusCode})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IHttpRequest.ResultFromJson``1">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IHttpRequest.ResultFromJsonAsync``1">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="T:PoJun.Util.Webs.Clients.IHttpRequest`1">
            <summary>
            Http请求
            </summary>
            <typeparam name="TResult">结果类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IHttpRequest`1.OnSuccess(System.Action{`0},System.Func{System.String,`0})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,参数为响应结果</param>
            <param name="convertAction">将结果字符串转换为指定类型，当默认转换实现无法转换时使用</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IHttpRequest`1.OnSuccess(System.Action{`0,System.Net.HttpStatusCode},System.Func{System.String,`0})">
            <summary>
            请求成功回调函数
            </summary>
            <param name="action">执行成功的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
            <param name="convertAction">将结果字符串转换为指定类型，当默认转换实现无法转换时使用</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IHttpRequest`1.ResultFromJson">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IHttpRequest`1.ResultFromJsonAsync">
            <summary>
            获取Json结果
            </summary>
        </member>
        <member name="T:PoJun.Util.Webs.Clients.IRequest`1">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.ContentType(PoJun.Util.Webs.Clients.HttpContentType)">
            <summary>
            设置内容类型
            </summary>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.ContentType(System.String)">
            <summary>
            设置内容类型
            </summary>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.Cookie(System.String,System.String,System.Double)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="expiresDate">有效时间，单位：天</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.Cookie(System.String,System.String,System.DateTime)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="expiresDate">到期时间</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.Cookie(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            设置Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="path">源服务器URL子集</param>
            <param name="domain">所属域</param>
            <param name="expiresDate">到期时间</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.Cookie(System.Net.Cookie)">
            <summary>
            设置Cookie
            </summary>
            <param name="cookie">cookie</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.Timeout(System.Int32)">
            <summary>
            超时时间
            </summary>
            <param name="timeout">超时时间,单位：秒</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.Header``1(System.String,``0)">
            <summary>
            请求头
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.Data(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            添加参数字典
            </summary>
            <param name="parameters">参数字典</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.Data``1(System.String,``0)">
            <summary>
            添加参数
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.JsonData``1(``0)">
            <summary>
            添加Json参数
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.OnFail(System.Action{System.String})">
            <summary>
            请求失败回调函数
            </summary>
            <param name="action">执行失败的回调函数,参数为响应结果</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.OnFail(System.Action{System.String,System.Net.HttpStatusCode})">
            <summary>
            请求失败回调函数
            </summary>
            <param name="action">执行失败的回调函数,第一个参数为响应结果，第二个参数为状态码</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.Result">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.IRequest`1.ResultAsync">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="T:PoJun.Util.Webs.Clients.WebClient">
            <summary>
            Web客户端
            </summary>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.WebClient.Get(System.String)">
            <summary>
            Get请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.WebClient.Post(System.String)">
            <summary>
            Post请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.WebClient.Put(System.String)">
            <summary>
            Put请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.WebClient.Delete(System.String)">
            <summary>
            Delete请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="T:PoJun.Util.Webs.Clients.WebClient`1">
            <summary>
            Web客户端
            </summary>
            <typeparam name="TResult">返回的结果类型</typeparam>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.WebClient`1.Get(System.String)">
            <summary>
            Get请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.WebClient`1.Post(System.String)">
            <summary>
            Post请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.WebClient`1.Put(System.String)">
            <summary>
            Put请求
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:PoJun.Util.Webs.Clients.WebClient`1.Delete(System.String)">
            <summary>
            Delete请求
            </summary>
            <param name="url">地址</param>
        </member>
    </members>
</doc>
